---
subtitle: "Alternatif Jawaban: Permasalahan Pemenuhan ATK Office"
title: "Workshop Melek Data"
author: "Departemen Market Research"
institute: Nutrifood Indonesia
format: 
  revealjs:
    theme: dark
    logo: logo.png
    css: logo.css
    slide-number: true
    footer: Melek Data Series
    incremental: false
    show-slide-number: all
    transition: convex
    width: 1280
    height: 720
    highlight-style: arrow-dark
    output-location: column
    code-overflow: scroll
    scrollable: true
    fig-dpi: 500
    fig-format: svg
editor: visual
execute: 
  echo: false
  warning: false
  message: false
---

```{r}
#| echo: false
#| include: false

setwd("~/melek-data/Problems/ATK/Alternatif Jawaban")

rm(list=ls())
library(readxl)
library(dplyr)
library(ggplot2)
library(epoxy)
```

# Pendahuluan

## Latar Belakang {.center}

Salah satu tugas dari tim *office* adalah *supporting another department* dalam hal kebutuhan sarana dan prasarana kerja, termasuk ke dalam pemenuhan kebutuhan **alat tulis kantor**. Setiap harinya, *user* di masing-masing departemen bisa melakukan *request* **alat tulis kantor** menggunakan sistem IT yang ada. Setiap *request* tersebut dicatat secara otomatis. Setelah itu, tim *office* **wajib memenuhi** *request* tersebut dan menuliskan rekap pemberian (serah terima) tersebut secara harian.

Data-data ini disimpan secara rapi namun belum pernah terutilisasi lebih lanjut.

## Data yang Dimiliki {.center .smaller}

Pada *folder* ini kalian akan menemukan dua buah *files* berformat `.xlsx`, yakni:

### **Data I**: `dbase pengeluaran produk.xlsx`

`dbase pengeluaran produk.xlsx`, yakni transaksi harian pemberian produk **alat tulis kantor** yang dilakukan tim *office* kepada orang yang meminta (*request*) di masing-masing departemen.

### **Data II**: `dbase pembelian produk.xlsx`

`dbase pembelian produk.xlsx`, yakni transaksi harian pembelian produk **alat tulis kantor** yang dilakukan tim *office* kepada *supplier*.

## **Data I**: `dbase pengeluaran produk.xlsx` {.center .smaller}

Sampel data pengeluaran produk.

```{r}
df = read_excel("~/melek-data/Problems/ATK/dbase pengeluaran produk.xlsx")
df[1:3,] |> knitr::kable()
```

## **Data II**: `dbase pembelian produk.xlsx` {.center .smaller}

Sampel data pembelian produk.

```{r}
df = read_excel("~/melek-data/Problems/ATK/dbase pembelian produk.xlsx")
df[2:4,] |> knitr::kable()
```

# Masalah

## *Problem Statement* {.center .smaller}

Masalah yang dihadapi oleh tim *office* adalah:

-   Jika semua produk overstok, maka **bisa jadi** ada kemungkinan barang terlalu lama "parkir" di gudang dan tidak terpakai.
-   Jika semua produk understok, maka *user* akan gelisah menunggu kapan *request*-nya bisa didapatkan.

Oleh karena itu, menggunakan data-data yang ada:

> Bantu tim *office* membuat strategi ***inbound - outbound*** (pemenuhan stok) yang optimal!

Buat **satu materi presentasi sederhana** yang bisa menjelaskan **ide dan strategi tim Anda!** Silakan gunakan *tools* pengolahan data sesuai dengan preferensi tim Anda!

Catatan: data ini dirancang untuk bisa diselesaikan cukup dengan `Ms. Excel`.

## *Discussion* {.center}

Apakah ada:

-   Variabel dari data yang tidak digunakan dalam membuat strategi tersebut?
-   Variabel yang belum ada pada data namun diperlukan dalam membuat strategi tersebut? Jika ada, sebutkan dan bahas dalam materi presentasi tim Anda!
-   Asumsi yang tim Anda gunakan dalam membuat strategi tersebut?

## *Hints* {.center .smaller}

Untuk membantu menyelesaikan masalah ini, Anda bisa mempertimbangkan untuk melakukan beberapa hal berikut ini:

1.  Membuat pre-analisa berupa analisa deskriptif dari kedua data tersebut.
2.  Strategi yang bisa dipertimbangkan: *cost efficiency* atau *service level*.
3.  ***Keep it simple!*** Seringkali masalah yang terlihat rumit dan kompleks sebenarnya bisa diselesaikan dengan pendekatan sederhana jika kita benar-benar bisa menyesuaikan tujuan dengan metode atau analisa yang digunakan.
4.  Melakukan transformasi kepada data yang memiliki *range* yang sangat lebar.

# *SELAMAT MENGERJAKAN!* {.unlisted .unnumbered .center .smaller}

*Notes:* Setiap tim diperbolehkan bertanya kepada *observer* sebanyak **tiga kali!**

# Alternatif Jawaban

## *Remarks* {.center}

Permasalah ini bisa diselesaikan dengan berbagai macam jawaban. Asumsi yang dipakai juga bisa beragam. Namun, walaupun tidak ada jawaban benar dan salah, kita tetap bisa menguji apakah asumsi yang kita gunakan logis atau tidak.

Pada bagian ini, kami memberikan **satu alternatif jawaban** yang bisa digunakan.

## Tujuan {.center}

Tujuan utama dari analisa ini adalah __memberikan masukan berupa strategi pemenuhan ATK__ kepada tim *office*, yakni bagaimana melakukan *inbound* dan *outbound* dari ATK yang ada.

## Tujuan {.center .unlisted .unnumbered}

**Kunci pemenuhan ATK** terletak dari bagaimana tim *office* __membeli dan melakukan proses__ *stocking* yang baik. 

> Oleh karena itu, kami tidak menggunakan *dataset* pembelian ATK. Kami hanya mengambil variabel harga dari masing-masing ATK dari *dataset* tersebut.

## Tujuan {.center .unlisted .unnumbered}

Untuk bisa membeli ATK dengan tepat, kita bisa membagi ATK menjadi kelompok-kelompok yang memiliki karakteristik yang sama. 

Pada analisa ini, kami akan mencari karakteristik dari semua ATK berdasarkan dua variabel yang menurut kami paling penting dalam menentukan strategi pembelian, yakni:

1.  **Harga** dan
2.  **Banyaknya** ***request*** terhadap ATK tersebut pada tahun 2023. 

## Langkah Pengerjaan {.center .smaller}

Langkah pengerjaan yang kami lakukan adalah:

1.  Melakukan analisa deskriptif.
    -   Apa ada variabel yang perlu atau tidak perlu dimasukkan?
    -   Melihat *time range* yang dijadikan basis strategi *inbound-outbound* ATK.
2.  Melakukan *clustering* untuk mengelompokkan ATK sesuai dengan kesamaan karakteristiknya.
    -   Apakah bisa dibuat strategi berdasarkan kelompok ATK yang dibuat?
    -   Apakah ada perhitungan *safety stock* yang spesifik di setiap *cluster* tersebut?

# Pre-Analisa Data Pembelian ATK

## Tren Pembelian ATK {.center .smaller}

```{r}
#| fig-align: center
#| fig-asp: 0.5625

# kita panggil datanya
df_1 = read_excel("~/melek-data/Problems/ATK/dbase pembelian produk.xlsx")

# buat default periodenya
periode_default = c(paste(1:12,2018,sep = "-"),
                    paste(1:12,2019,sep = "-"),
                    paste(1:12,2020,sep = "-"),
                    paste(1:12,2021,sep = "-"),
                    paste(1:12,2022,sep = "-"),
                    paste(1:12,2023,sep = "-"))

# kita enrich dulu untuk perhitungan
df_1 = 
  df_1 |>
  mutate(bulan = lubridate::month(tanggal),
         tahun = lubridate::year(tanggal)) |>
  mutate(periode = paste(bulan,tahun,sep = "-"),
         periode = factor(periode,levels = periode_default))

# plot pertama
df_1 |>
  group_by(periode) |>
  summarise(beli = sum(total_beli)) |>
  ungroup() |>
  mutate(label = beli / 10^6,
         label = round(label,1),
         label = paste0("Rp",label,"jt")) |>
  ggplot(aes(x = periode,
             y = beli)) +
  geom_line(group = 1,color = "steelblue") +
  geom_text(aes(label = label),alpha = .5,size = 2.5) +
  scale_x_discrete(guide = guide_axis(n.dodge=4)) +
  theme_minimal() +
  labs(title = "Trend Pembelian ATK per Bulan",
       subtitle = "Sumber: data pembelian ATK",
       x = "Periode",
       y = "Total Pembelian (Rp)") +
  theme(axis.text.y = element_blank())
```

## _Range_ Harga ATK {.center .smaller}

```{r}
#| fig-align: center
#| fig-asp: 0.5625

# plot tentang harga per jenis satuan barang ATK
df_1 |>
  mutate(satuan = tolower(satuan),
         satuan = trimws(satuan)) |>
  select(satuan,harga_beli) |>
  distinct() |>
  mutate(harga_beli = as.numeric(harga_beli)) |>
  group_by(satuan) |>
  summarise(min = min(harga_beli),
            max = max(harga_beli),
            mean = mean(harga_beli,na.rm = T)) |>
  ungroup() |>
  ggplot() +
  geom_errorbar(aes(x = satuan,ymin = min,ymax = max),
                width = .2) +
  geom_point(aes(x = satuan,y = mean),shape = 4,color = "darkred") +
  labs(title = "Range Harga ATK per Jenis Satuannya") +
  theme_minimal() +
  labs(subtitle = "Sumber: data pembelian ATK",
       x = "Jenis Satuan ATK",
       y = "Range Harga (Rp)")
```

## _Range_ Harga ATK {.center .smaller}

::: columns
::: {.column width="80%"}

```{r,fig.height=3}
#| fig-align: center
#| fig-asp: 0.5625

# plot tentang harga per jenis satuan barang ATK
df_1 |>
  mutate(satuan = tolower(satuan),
         satuan = trimws(satuan)) |>
  select(satuan,harga_beli) |>
  distinct() |>
  mutate(harga_beli = as.numeric(harga_beli)) |>
  group_by(satuan) |>
  mutate(harga_beli = log(harga_beli)) |>
  summarise(min = min(harga_beli),
            max = max(harga_beli),
            mean = mean(harga_beli,na.rm = T)) |>
  ungroup() |>
  ggplot() +
  geom_errorbar(aes(x = satuan,ymin = min,ymax = max),
                width = .2) +
  geom_point(aes(x = satuan,y = mean),shape = 4,color = "darkred") +
  labs(title = "Range Log Harga ATK per Jenis Satuannya") +
  theme_minimal() +
  labs(subtitle = "Sumber: data pembelian ATK",
       x = "Jenis Satuan ATK",
       y = "Range Harga (Rp) - logaritmik")
```

:::
::: {.column width="20%"}

Dari grafik sebelumnya, kita melihat *range* harga yang cukup jauh di beberapa jenis satuan. Oleh karena itu, kami melakukan transformasi `logaritmik` agar *range*-nya menjadi lebih *comparable*.

:::
::: 

# Pre-Analisa Data Pengeluaran ATK

## Data Serah Terima ATK per Tahun {.center .smaller}

```{r}
#| df-print: paged
#| 
# import data
df_2 = read_excel("~/melek-data/Problems/ATK/dbase pengeluaran produk.xlsx")

# kita enrich terlebih dahulu sesuai dengan df_1
df_2 = 
  df_2 |>
  mutate(bulan = lubridate::month(tanggal),
         tahun = lubridate::year(tanggal)) |>
  mutate(periode = paste(bulan,tahun,sep = "-"),
         periode = factor(periode,levels = periode_default))

tabel_1 = 
  df_2 |>
  group_by(tahun,nama_item) |>
  summarise(outbound = sum(jml_keluar)) |>
  ungroup() |>
  reshape2::dcast(nama_item ~ tahun,value.var = "outbound") |>
  arrange(desc(`2023`)) |>
  rename("Nama ATK" = nama_item) |>
  head(10) 

tabel_1 |>
  knitr::kable(align = "c",caption = "Total Serah Terima ATK per Tahun (10 ATK Teratas - Diurutkan dari Angka Tahun 2023)")
```

## Data Serah Terima ATK per Bulan Pada 2023 {.center .smaller}

```{r}
tabel_2 = 
  df_2 |>
  filter(tahun == 2023) |>
  filter(nama_item %in% tabel_1$`Nama ATK`) |>
  group_by(nama_item,bulan) |>
  summarise(outbound = sum(jml_keluar)) |>
  ungroup() |>
  reshape2::dcast(nama_item ~ bulan,value.var = "outbound")
  
tabel_2[is.na(tabel_2)] = 0

tabel_2 |> 
  rename("Nama ATK" = nama_item) |>
  knitr::kable(align = "c",caption = "Total Serah Terima ATK per Bulan (10 ATK Teratas - Diurutkan dari Angka Tahun 2023)")
```

# _Clustering Analysis_

## *Clustering Analysis* {.center}

Tujuan utama _clustering_ ini adalah:

> Mengelompokkan ATK yang memiliki karakteristik yang sama sehingga strategi ___inbound - outbound___ bisa disusun berdasarkan kelompok-kelompok tersebut.

Salah satu cara termudah untuk melakukan _clustering_ __tanpa menggunakan__ ___machine learning___ adalah dengan melakukan _clustering_ secara visual.


## _Clustering_ Secara Visual {.center .smaller}

Untuk melakukan _clustering_ secara visual, kita akan memilih dua variabel penting, yakni: `harga` dan `total request` untuk kemudian dibuat _scatterplot_-nya.

Berikut adalah _sample_ data variabel `harga` dan `total request` yang telah disatukan dari kedua _datasets_ di atas:

```{r,warning=FALSE,message=FALSE}
# kita ambil harga dan inbound
temp_1 = 
  df_1 %>% 
  filter(tahun == 2023) %>% 
  mutate(harga_beli = as.numeric(harga_beli)) %>% 
  group_by(nama_item) %>% 
  summarise(harga   = mean(harga_beli,na.rm = T),
            inbound = sum(jml_masuk)) %>% 
  ungroup()

# kita ambil outbound
temp_2 = 
  df_2 %>% 
  filter(tahun == 2023) %>% 
  group_by(nama_item) %>% 
  summarise(outbound = sum(jml_keluar)) %>% 
  ungroup()

# kita gabung dulu
df_final = merge(temp_1,temp_2,all.x = T)
df_final %>% 
  select(nama_item,harga,outbound) %>% 
  arrange(desc(outbound)) %>%
  head(7) %>% 
  knitr::kable(align = "c",caption = "Sample Top 7 Data ATK: Harga dan Outbound")
```

## _Clustering_ Secara Visual {.center .smaller .unlisted .unnumbered}

Kita buat _scatterplot_ dari data sebelumnya sebagai berikut:

```{r}
#| fig-align: center
#| fig-asp: 0.5625

df_final %>% 
  ggplot(aes(y = outbound,
             x = harga)) +
  geom_point(color = "steelblue") +
  labs(title = "Scatterplot Antara Harga dan Outbound",
       subtitle = "Data ATK Tahun 2023",
       x = "Harga",
       y = "Outbound")
```

## _Clustering_ Secara Visual {.center .smaller .unlisted .unnumbered}

::: columns
::: {.column width="80%"}

```{r, fig.height=3}
#| fig-align: center
#| fig-asp: 0.5625
harga_log    = log(df_final$harga) %>% mean()
outbound_log = log(df_final$outbound) %>% mean()

df_final %>% 
  ggplot(aes(y = log(outbound),
             x = log(harga))) +
  geom_point(color = "steelblue") +
  ggrepel::geom_text_repel(aes(label = nama_item),alpha = .3,size = 1.5) +
  labs(title = "Scatterplot Antara Harga dan Outbound",
       subtitle = "Data ATK Tahun 2023",
       x = "Log Harga",
       y = "Log Outbound") +
  theme_minimal() +
  geom_hline(yintercept = outbound_log,color = "red",alpha = .25) +
  geom_vline(xintercept = harga_log,color = "red",alpha = .25) +
  annotate("text",x = 11,y = 6,label = "Kuadran 1",color = "darkgreen",alpha = .5) +
  annotate("text",x = 11,y = 2,label = "Kuadran 2",color = "darkgreen",alpha = .5) +
  annotate("text",x = 8,y = 1,label = "Kuadran 3",color = "darkgreen",alpha = .5) +
  annotate("text",x = 8,y = 7,label = "Kuadran 4",color = "darkgreen",alpha = .5)

df_kuadran = 
  df_final %>% 
  mutate(harga = log(harga),
         outbound = log(outbound)) %>% 
  mutate(kuadran_ke = case_when(
    harga < harga_log & outbound < outbound_log ~ "Kuadran 3",
    harga > harga_log & outbound > outbound_log ~ "Kuadran 1",
    harga > harga_log & outbound < outbound_log ~ "Kuadran 2",
    harga < harga_log & outbound > outbound_log ~ "Kuadran 4"
  ))

kuadran = data.frame(kuadran = 1:4,
                     price   = c("high price","high price","low price","low price"),
                     demand  = c("high demand","low demand","low demand","high demand"))

df_kuadran %>% 
  group_by(kuadran_ke) %>% 
  tally() %>% 
  ungroup()
```

:::
::: {.column width="20%"}

Oleh karena _range_ datanya terlalu jauh sehingga bentuk _scatterplot_-nya tidak konklusif, maka kita akan lakukan transformasi dengan menggunakan fungsi logaritmik. Kemudian kita akan bagi _scatterplot_ menjadi __empat kuadran__ sebagai berikut.

:::
:::

## Empat Kuadran Hasil _Clustering_ {.center .smaller}

Kita bisa dapatkan empat kuadran sebagai berikut:

```{epoxy .data = kuadran}
1. __Kuadran {kuadran}__, yakni ATK yang memiliki `{price}` dan `{demand}`.
```
